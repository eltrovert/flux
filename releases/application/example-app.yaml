apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImageRepository
metadata:
  name: example-app
  namespace: flux-system
spec:
  image: eltrovert/example-app
  interval: 30s
  secretRef:
    name: dockerhub-key
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImagePolicy
metadata:
  name: example-app
  namespace: flux-system
spec:
  imageRepositoryRef:
    name: example-app
  policy:
    semver:
      range: '>1.0.0'
---
apiVersion: v1
kind: Secret
metadata:
  name: example-app-configs
  namespace: application
type: Opaque
stringData:
  APP_NAME: "example-app"
  ENV: "production"
  PORT: "3000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-app
  namespace: application
  labels:
    app: example-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: example-app
  template:
    metadata:
      labels:
        app: example-app
    spec:
      imagePullSecrets:
        - name: dockerhub-key
      containers:
        - name: example-app
          image: 
            name: eltrovert/example-app:1.0.1 # {"$imagepolicy": "flux-system:example-app"}
          ports:
            - containerPort: 3000
          envFrom:
            - secretRef:
                name: "example-app-configs"
---
apiVersion: v1
kind: Service
metadata:
  name: example-app
  namespace: application
  labels:
    app: example-app
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app: example-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-app
  namespace: application
spec:
  ingressClassName: traefik
  rules:
    - host: gitops.application.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: example-app
                port:
                  number: 80